<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Random Cat Facts</title>
  <link rel="stylesheet" href="/styles/main.css">
</head>
<body>
  <header>
    <h1>Random Cat Facts</h1>
  </header>

  <main>
    <section id="fact-display">
      <p id="cat-fact">
        <%= fact ? fact : "Click the button to see a random cat fact!" %>
      </p>

      <!-- Animated Kitty Loading -->
      <p id="loading-text" class="loading-cat" style="display: none;"></p>

    </section>
    
    <form action="/get-fact" method="GET">
      <button id="fetch-fact" type="button">Press Button</button>
    </form>
  </main>

  <footer>
    <p>Designed by Manuel Antonio Metzger</p>

    <!-- Dark Mode Toggle -->
    <div class="toggle-container">
      ☀️
      <label class="switch">
          <input type="checkbox" id="dark-mode-toggle">
          <span class="slider"></span>
      </label>
      🌙
    </div>
  </footer>

  <script>
      // Dark Mode Toggle
      const darkModeToggle = document.getElementById("dark-mode-toggle");
      const body = document.body;

      if (localStorage.getItem("dark-mode") === "enabled") {
          body.classList.add("dark-mode");
          darkModeToggle.checked = true;
      }

      darkModeToggle.addEventListener("change", () => {
          body.classList.toggle("dark-mode");
          localStorage.setItem("dark-mode", body.classList.contains("dark-mode") ? "enabled" : "disabled");
      });

      // Cat Loading Animation
      const catFrames = [
          "(=^-ω-^=)",
          "(=^･ω･^=)",
          "(=①ω①=)",
          "(=ΦωΦ=)"
      ];

      async function fetchCatFact() {
          const factText = document.getElementById("cat-fact");
          const loadingText = document.getElementById("loading-text");

          loadingText.style.display = "block";
          factText.style.display = "none";

          let frameIndex = 0;
          const animation = setInterval(() => {
              loadingText.textContent = "Loading...\n" + catFrames[frameIndex];
              frameIndex = (frameIndex + 1) % catFrames.length;
          }, 500);

          try {
              await new Promise(resolve => setTimeout(resolve, 3000));

              const response = await fetch("/get-fact");
              const data = await response.text();

              clearInterval(animation);
              loadingText.style.display = "none";
              factText.innerHTML = data;
              factText.style.display = "block";
          } catch (error) {
              clearInterval(animation);
              factText.innerHTML = "Oops! Couldn't fetch a cat fact.";
              loadingText.style.display = "none";
              factText.style.display = "block";
          }
      }

      document.getElementById("fetch-fact").addEventListener("click", (event) => {
          event.preventDefault();
          fetchCatFact();
      });
  </script>

</body>
</html>
